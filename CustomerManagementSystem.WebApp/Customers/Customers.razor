@page "/customers"
@using CustomerManagementSystem.Api.Contracts
@inject HttpClient Http

<PageTitle>Endpoints</PageTitle>

<h1>Endpoints</h1>

<div class="container container-fluid align-content-center">


    @if (_customers == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-grow text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <table class="table table-striped table-hover table-borderless">
            <thead>
            <tr>
                <td class="col-sm-3">#</td>
                <td class="col-sm-3">Full Name</td>
                <td>Email</td>
                <td class="col-sm-2">Actions</td>
            </tr>
            </thead>
            <tbody>
            @foreach (var customer in _customers)
            {
                <tr>
                    <td class="col-sm-3">@customer.Id</td>
                    <td class="col-sm-3">@customer.FullName</td>
                    <td>@customer.Email</td>
                    <td class="col-sm-2">
                        @if (customer.IsConfirmed)
                        {
                            <i class="bi bi-check-circle-fill" style="color: green;"></i>
                        }
                        else
                        {
                            <i class="bi bi-x-circle-fill" style="color: darkred"></i>
                            <button class="btn btn-sm btn-secondary"
                                    onclick="@(async () => await ConfirmRegistration(customer))">
                                Confirm Registration
                            </button>
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    }
</div>

@code {

    ICollection<CustomerDto>? _customers = null;
    protected override async Task OnInitializedAsync()
    {
        _customers = await Http.GetFromJsonAsync<ICollection<CustomerDto>>("api/customers");
    }

    private async Task ConfirmRegistration(CustomerDto customer)
    {
        var response = await Http.PutAsync($"api/customers/{customer.Id}/confirm", null);

        if (response.IsSuccessStatusCode)
        {
            customer.IsConfirmed = true;
            await InvokeAsync(StateHasChanged);
        }
    }

}
