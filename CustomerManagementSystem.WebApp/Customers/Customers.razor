@page "/customers"
@using CustomerManagementSystem.Api.Contracts
@inject HttpClient Http

<PageTitle>Customers</PageTitle>

<h1>Customers</h1>

<div class="container container-fluid align-content-center">

    <table class="table table-striped table-hover table-borderless">
        <thead>
        <tr>
            <td class="col-sm-3">#</td>
            <td class="col-sm-3">Full Name</td>
            <td>Email</td>
            <td class="col-sm-2">Actions</td>
        </tr>
        </thead>
        <tbody>

        <Virtualize Items="_customers">
            <EmptyContent>
                <tr>
                    <td colspan="4" class="text-center">
                        <div class="d-flex justify-content-center">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    </td>
                </tr>
            </EmptyContent>
            <ChildContent>
                <tr>
                    <td class="col-sm-3">@context.Id</td>
                    <td class="col-sm-3">@context.FullName</td>
                    <td>@context.Email</td>
                    <td class="col-sm-2">
                        @if (context.IsConfirmed)
                        {
                            <i class="bi bi-check-circle-fill" style="color: green;"></i>
                        }
                        else
                        {
                            <i class="bi bi-x-circle-fill" style="color: darkred"></i>
                            <button class="btn btn-sm btn-secondary"
                                    onclick="@(async () => await ConfirmRegistration(context))">
                                Confirm Registration
                            </button>
                        }
                    </td>
                </tr>
            </ChildContent>
        </Virtualize>

        </tbody>
    </table>
</div>

@code {

    ICollection<CustomerDto>? _customers = [];

    protected override async Task OnInitializedAsync()
    {
        _customers = await Http.GetFromJsonAsync<ICollection<CustomerDto>>("api/customers");
    }

    private async Task ConfirmRegistration(CustomerDto customer)
    {
        var response = await Http.PutAsync($"api/customers/{customer.Id}/confirm", null);

        if (response.IsSuccessStatusCode)
        {
            customer.IsConfirmed = true;
            await InvokeAsync(StateHasChanged);
        }
    }

}
